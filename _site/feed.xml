<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-12-09T21:54:05+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Andro’s tech blog</title><subtitle>Andro의 블로그입니다. 학습했던 것을 정리해 블로그에 올리고 있습니다.</subtitle><author><name>Andro</name><email>seongwoo.dev@gmail.com</email></author><entry><title type="html">first post</title><link href="http://localhost:4000/blog/first-post/" rel="alternate" type="text/html" title="first post" /><published>2019-12-09T00:00:00+09:00</published><updated>2019-12-09T14:20:00+09:00</updated><id>http://localhost:4000/blog/first-post</id><content type="html" xml:base="http://localhost:4000/blog/first-post/">&lt;p&gt;YFM에서 정의한 제목을 이중 괄호 구문으로 본문에 추가할 수 있다.
이 글의 제목은 first post이고
마지막으로 수정된 시간은 2019-12-09 00:20:00 -0500이다.&lt;/p&gt;</content><author><name>Andro</name><email>seongwoo.dev@gmail.com</email></author><category term="Blog" /><summary type="html">first post excerpt</summary></entry><entry><title type="html">Fluentd로 데이터 수집해 AWS Kinesis firehose로 보내기</title><link href="http://localhost:4000/blog/second-post/" rel="alternate" type="text/html" title="Fluentd로 데이터 수집해 AWS Kinesis firehose로 보내기" /><published>2019-12-09T00:00:00+09:00</published><updated>2019-12-09T00:00:00+09:00</updated><id>http://localhost:4000/blog/second-post</id><content type="html" xml:base="http://localhost:4000/blog/second-post/">&lt;h1 id=&quot;목적&quot;&gt;목적&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;이 문서는 Fluentd에서 AWS Kinesis firehose로 데이터 보내는 테스트의 과정과 결과를 기록하기 위해 작성하였다.&lt;/p&gt;

&lt;p&gt;Elasticsearch, Fluentd, AWS Kinesis firehose에 대한 기초 지식에 대한 것은 이미 알고 있다는 가정하에 문서 작성을 한다. 모르는 경우 다른 블로그 문서들을 참고하도록 한다.&lt;/p&gt;

&lt;h1 id=&quot;테스트-환경&quot;&gt;테스트 환경&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;테스트 환경은 다음과 같다.&lt;/p&gt;

&lt;h2 id=&quot;로컬-환경&quot;&gt;로컬 환경&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Python 3.7.4&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fluentd 1.7.1&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ruby 2.4.0&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MacOS Catalina&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;aws-테스트-리전-관련-서비스-흐름&quot;&gt;AWS 테스트 리전, 관련 서비스, 흐름&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;테스트 리전: 서울 리전&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;테스트 관련 서비스:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Amazon Kinesis Data Firehose&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Amazon Elasticsearch Service(이하 Amazon ES)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Amazon S3&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;                                                  Kinesis Data Firehose
                                                 +----------------------+
  +---------+           +--------+               |  Event-1 - Stream-1  |                 +--------+
  |  data   |----------&amp;gt;|Fluentd |--------------&amp;gt;|         ...          |----------------&amp;gt;| AWS S3 |
  +---------+           +--------+ data records  |  Event-N - Stream-N  |        backup   +--------+
                                                 +----------------------+                   Bucket
                                                     Delivery Streams
                                                      (Event Stream)
                                                            |                             +---------------+
                                                            |                             | Elasticsearch |
                                                            +----------------------------&amp;gt;| Cluster       |&amp;lt;---&amp;gt;[Kibana]
                                                                                indexing  +---------------+      dashboard
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;aws-elasticsearch-환경&quot;&gt;AWS Elasticsearch 환경&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;도메인 명: &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Elasticsearch 7.1&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;인스턴스 구성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;인스턴스 유형 : t2.small.elasticsearch (vCPU 1, Memory 2GiB)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;인스턴스 개수 : 1&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;인스턴스별 일반 EBS(SSD) 10GB 각 1개&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;테스트 인덱스 : data-test&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;aws-kinesis-firehose-환경&quot;&gt;AWS Kinesis Firehose 환경&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Input: AWS Kinesis Data stream&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Output: AWS Elasticsearch&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Index rotation 적용&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;fluentd에서-aws-kinesis-firehose로-데이터-보내기&quot;&gt;Fluentd에서 AWS Kinesis firehose로 데이터 보내기&lt;/h1&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;데이터-수집-플랫폼-테스트-환경-구축&quot;&gt;데이터 수집 플랫폼 테스트 환경 구축&lt;/h2&gt;

&lt;p&gt;테스트를 위해 먼저 AWS Kinesis Firehose를 생성한다. &lt;/p&gt;

&lt;p&gt;생성시 위에 서술한 테스트 환경에 해당하는 스펙과 설정으로 생성한다. 생성 시 유의 사항은 다음과 같다. Index rotation 기능을 활성화한 이유는 커넥츠 15초 데이터 수집 플랫폼에서 해당 기능을 이용하기 때문이다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;AWS Kinesis Firehose의 설정 중 Index rotation의 시간을 Hour으로 설정한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위에 설명한 AWS 자원은 생성했다는 가정하에 POC는 다음과 같은 순서로 테스트를 진행한다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Elasticsearch에 template을 설정한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fleuntd의 설정을 변경해 특정 디렉토리의 로그를 Watch하고 Output을 AWS Kinesis firehose으로 설정한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;정상적으로 데이터가 Fluentd에서 Firehose로 입력되었는 지 확인한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;정상적으로 데이터가 Firehose에서 Elasticsearch로 입력되었는 지 확인한다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;elasticsearch에-template-설정&quot;&gt;Elasticsearch에 Template 설정&lt;/h2&gt;

&lt;p&gt;Elasticsearch에 tempalte을 설정하기 위해 Kibana Dev tools에 아래와 같은 명령어를 실행한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PUT _template/template-test
{
    &quot;index_patterns&quot;: [
        &quot;data-test-*&quot;
    ],
    &quot;settings&quot;: {
        &quot;number_of_shards&quot;: 1
    },
    &quot;aliases&quot;: {
        &quot;test-data&quot;: {}
    },
    &quot;mappings&quot;: {
            &quot;_source&quot;: {
                &quot;enabled&quot;: true
            },
            &quot;properties&quot;: {
                &quot;board_id&quot;: {
                    &quot;type&quot;: &quot;long&quot;
                },
                &quot;playtime&quot;: {
                    &quot;type&quot;: &quot;long&quot;
                },
                &quot;timestamp&quot;: {
                    &quot;type&quot;: &quot;date&quot;
                },
                &quot;user_id&quot;: {
                    &quot;type&quot;: &quot;long&quot;
                },
                &quot;interest&quot;: {
                    &quot;type&quot;: &quot;keyword&quot;
                }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;명령어 실행 후 아래와 같은 메시지가 나온다면 성공적으로 동작한 것이다. &lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
  &quot;acknowledged&quot; : true
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;fluentd의-aws-kinesis-data-stream-플러그인-설치하기&quot;&gt;Fluentd의 AWS Kinesis Data stream 플러그인 설치하기&lt;/h2&gt;

&lt;p&gt;Fluentd의 많은 플러그인 중 AWS Kinesis를 위한 Output plugin이 있다. 자세한 내용은 &lt;a href=&quot;https://github.com/awslabs/aws-fluent-plugin-kinesis&quot;&gt;aws-fluent-plugin-kinesis 문서&lt;/a&gt;를 참고한다.&lt;/p&gt;

&lt;p&gt;AWS Kinesis output plugin 설치 명령은 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gem install fluent-plugin-kinesis
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;fluentd의-설정-변경-및-실행&quot;&gt;Fluentd의 설정 변경 및 실행&lt;/h2&gt;

&lt;p&gt;다음과 같은 디렉토리 구조를 생성한다. 해당 구조로 프로젝트 디렉토리를 구성한 이후 다음 내용을 진행한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Project/pos/
Project/pos/pos_file.pos
Project/source/{log_file.log}
Project/kinesis_test.config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;kinesis_test.config을 생성하고 다음과 같이 내용을 입력한다. 내용 중 Path, Pos_file에 대한 설정은 각자 환경에 맞게 구성한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;source&amp;gt;
  @type tail
  path /Users/st/test/test_data_poc/source/*.log
  pos_file /Users/st/test/test_data_poc/pos/pos_file.pos
  tag kinesis.test
  &amp;lt;parse&amp;gt;
    @type json
  &amp;lt;/parse&amp;gt;
  refresh_interval 5s
&amp;lt;/source&amp;gt;


&amp;lt;match kinesis.*&amp;gt;
  @type kinesis_firehose
  region ap-northeast-2
  delivery_stream_name test-fluentd-firehose
  &amp;lt;buffer tag&amp;gt;
    flush_mode interval
    flush_interval 1s
  &amp;lt;/buffer&amp;gt;
&amp;lt;/match&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Fluentd를 실행하기 위해 Project 디렉토리에서 다음과 같은 명령을 실행한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ fluentd -c kinesis_test.config -o fleuntd.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;새로운 터미널을 열고 로그 파일을 보기 위해 다음과 같은 명령을 실행한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ tail -f fleuntd.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;로그 파일을 통해 Fluentd가 정상적으로 실행되었다는 것을 확인한다.&lt;/p&gt;

&lt;h2 id=&quot;data-gererator를-만들고-실행하기&quot;&gt;Data gererator를 만들고 실행하기&lt;/h2&gt;

&lt;p&gt;다음과 같은 데이터 형식으로 Data generator를 만들면 된다. &lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;board_id : long
playtime : long
timestamp : date형
user_id : long
interest: long
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Data generator를 만들기 위해 data_generator.py를 생성하고 다음과 같이 내용을 입력한다. &lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;from datetime import datetime
import string
import time
from multiprocessing import Pool
from random import *
import random
from datetime import timedelta, datetime
import json


def random_date(start, end):
    &quot;&quot;&quot;
    This function will return a random datetime between two datetime 
    objects.
    &quot;&quot;&quot;
    delta = end - start
    int_delta = (delta.days * 24 * 60 * 60) + delta.seconds
    random_second = randrange(int_delta)
    return start + timedelta(seconds=random_second)


def make_datetime_now():
    d1 = datetime.strptime('1/1/2019 1:30 PM', '%m/%d/%Y %I:%M %p')
    d2 = datetime.strptime('12/29/2019 4:50 AM', '%m/%d/%Y %I:%M %p')
    
    d3 = random_date(d1, d2)
    d3 = str(d3)

    random_date_string = d3[0:10] + 'T' +d3[11:]+'Z'

    return random_date_string


def make_random_number(start, end):
    random_number = randint(start, end)
    
    return random_number


def make_datum():
    board_id = make_random_number(0, 1000000)
    playtime = make_random_number(0, 15)
    user_id = make_random_number(0, 1000000)
    timestamp = make_datetime_now()
    interest = &quot;test_first&quot;

    datum = {
        &quot;board_id&quot; : board_id,
        &quot;playtime&quot; : playtime,
        &quot;user_id&quot; : user_id, 
        &quot;timestamp&quot; : timestamp,
        &quot;interest&quot; : &quot;test_fluentd_firehose&quot;
    }

    return datum


def make_datum_to_json(datum):
    return json.dumps(datum)


def write_datum_json_to_file(datum, file_name):
    with open(file_name, 'a') as file_object:
        file_object.write(datum)
        file_object.write(&quot;\n&quot;)


def main():

    for j in range(0, 100):
        for i in range(0, 100):
            datum = make_datum()
            
            print(datum)

            datum_json = make_datum_to_json(datum)
            write_datum_json_to_file(datum_json, &quot;source/test_fluentd_firehose.log&quot;)
        time.sleep(1)


if __name__ == &quot;__main__&quot;:
    main()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음과 같이 명령어를 입력해 data_generator.py을 실행한다.  실행 시 data_generator.py는 10000개의 데이터를 생성하고 파일로 기록한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python data_generator.py &amp;gt; firehose.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;미리 설정해둔 fleuntd.log에서 다음과 같은 메시지를 확인한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2019-11-14 21:07:00 +0900 [info]: #0 following tail of /Users/st/test/test_data_poc/source/test_fluentd_firehose.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;데이터-입력이-제대로-됬는지-확인&quot;&gt;데이터 입력이 제대로 됬는지 확인&lt;/h2&gt;

&lt;p&gt;데이터 입력이 제대로 되었는 지 확인하기 위해 Elasticsearch, S3를 확인한다.&lt;/p&gt;

&lt;p&gt;먼저 S3를 확인한다. Firehose 생성 시 버킷을 sw-test123으로 지정했으니 해당 버킷의 다음 경로를 확인한다. 경로는 Firehose의 s3 데이터 생성 규칙에 따라 생성되며 모를 경우 AWS Firehose &lt;a href=&quot;https://docs.aws.amazon.com/ko_kr/firehose/latest/dev/s3-prefixes.html&quot;&gt;공식문서&lt;/a&gt;를 참고하도록 한다. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;sw-test123/2019/11/18/11/test-fluentd-firehose-1-2019-11-18-11-31-41-51ca2829-cd74-401a-97b3-1a0e771487ea&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;sw-test123/2019/11/18/11/test-fluentd-firehose-1-2019-11-18-11-32-42-e92a1013-5683-4021-8b4f-5a54714af860&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위의 두개의 파일을 확인하면 정확히 10000개의 레코드가 입력된것을 확인할 수 있다. &lt;/p&gt;

&lt;p&gt;데이터 입력이 제대로 되었는 지 확인하기 위해 다음으로 Elasticsearch를 확인한다.&lt;/p&gt;

&lt;p&gt;확인을 위해 Kibana Dev tools에서 아래와 같은 쿼리를 입력하고 결과를 확인한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET _search/
{
  &quot;query&quot;: {
    &quot;match&quot;: {&quot;interest&quot;:&quot;test_fluentd_firehose&quot;}
  }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
  &quot;took&quot; : 16,
  &quot;timed_out&quot; : false,
  &quot;_shards&quot; : {
    &quot;total&quot; : 22,
    &quot;successful&quot; : 22,
    &quot;skipped&quot; : 0,
    &quot;failed&quot; : 0
  },
  &quot;hits&quot; : {
    &quot;total&quot; : {
      &quot;value&quot; : 10000,
      &quot;relation&quot; : &quot;eq&quot;
    },
    &quot;max_score&quot; : 0.99693555,
    &quot;hits&quot; : [
      {
        &quot;_index&quot; : &quot;data-test-2019-11-18-11&quot;,
        &quot;_type&quot; : &quot;_doc&quot;,
        &quot;_id&quot; : &quot;49601506511312770511672440629703967127024877424999399426.0&quot;,
        &quot;_score&quot; : 0.99693555,
        &quot;_source&quot; : {
          &quot;board_id&quot; : 922281,
          &quot;playtime&quot; : 13,
          &quot;user_id&quot; : 48951,
          &quot;interest&quot; : &quot;test_fluentd_firehose&quot;,
          &quot;timestamp&quot; : &quot;2019-02-19T23:08:10Z&quot;
        }
      },
      {
        &quot;_index&quot; : &quot;data-test-2019-11-18-11&quot;,
        &quot;_type&quot; : &quot;_doc&quot;,
        &quot;_id&quot; : &quot;49601506511312770511672440629705176052844492054174105602.0&quot;,
        &quot;_score&quot; : 0.99693555,
        &quot;_source&quot; : {
          &quot;board_id&quot; : 919679,
          &quot;playtime&quot; : 4,
          &quot;user_id&quot; : 515347,
          &quot;interest&quot; : &quot;test_fluentd_firehose&quot;,
          &quot;timestamp&quot; : &quot;2019-12-26T08:25:05Z&quot;
        }
      },
      {
        &quot;_index&quot; : &quot;data-test-2019-11-18-11&quot;,
        &quot;_type&quot; : &quot;_doc&quot;,
        &quot;_id&quot; : &quot;49601506511312770511672440629706384978664106683348811778.0&quot;,
        &quot;_score&quot; : 0.99693555,
        &quot;_source&quot; : {
          &quot;board_id&quot; : 484020,
          &quot;playtime&quot; : 14,
          &quot;user_id&quot; : 475076,
          &quot;interest&quot; : &quot;test_fluentd_firehose&quot;,
          &quot;timestamp&quot; : &quot;2019-10-06T15:58:35Z&quot;
        }
      },
      {
        &quot;_index&quot; : &quot;data-test-2019-11-18-11&quot;,
        &quot;_type&quot; : &quot;_doc&quot;,
        &quot;_id&quot; : &quot;49601506511312770511672440629707593904483721312523517954.0&quot;,
        &quot;_score&quot; : 0.99693555,
        &quot;_source&quot; : {
          &quot;board_id&quot; : 476641,
          &quot;playtime&quot; : 1,
          &quot;user_id&quot; : 883424,
          &quot;interest&quot; : &quot;test_fluentd_firehose&quot;,
          &quot;timestamp&quot; : &quot;2019-05-14T20:46:58Z&quot;
        }
      },
      {
        &quot;_index&quot; : &quot;data-test-2019-11-18-11&quot;,
        &quot;_type&quot; : &quot;_doc&quot;,
        &quot;_id&quot; : &quot;49601506511312770511672440629708802830303335941698224130.0&quot;,
        &quot;_score&quot; : 0.99693555,
        &quot;_source&quot; : {
          &quot;board_id&quot; : 967380,
          &quot;playtime&quot; : 5,
          &quot;user_id&quot; : 642448,
          &quot;interest&quot; : &quot;test_fluentd_firehose&quot;,
          &quot;timestamp&quot; : &quot;2019-03-18T11:11:58Z&quot;
        }
      },
      {
        &quot;_index&quot; : &quot;data-test-2019-11-18-11&quot;,
        &quot;_type&quot; : &quot;_doc&quot;,
        &quot;_id&quot; : &quot;49601506511312770511672440629710011756122950570872930306.0&quot;,
        &quot;_score&quot; : 0.99693555,
        &quot;_source&quot; : {
          &quot;board_id&quot; : 261627,
          &quot;playtime&quot; : 1,
          &quot;user_id&quot; : 242466,
          &quot;interest&quot; : &quot;test_fluentd_firehose&quot;,
          &quot;timestamp&quot; : &quot;2019-07-27T03:16:14Z&quot;
        }
      },
      {
        &quot;_index&quot; : &quot;data-test-2019-11-18-11&quot;,
        &quot;_type&quot; : &quot;_doc&quot;,
        &quot;_id&quot; : &quot;49601506511312770511672440629711220681942565200047636482.0&quot;,
        &quot;_score&quot; : 0.99693555,
        &quot;_source&quot; : {
          &quot;board_id&quot; : 486000,
          &quot;playtime&quot; : 6,
          &quot;user_id&quot; : 390459,
          &quot;interest&quot; : &quot;test_fluentd_firehose&quot;,
          &quot;timestamp&quot; : &quot;2019-06-22T22:54:43Z&quot;
        }
      },
      {
        &quot;_index&quot; : &quot;data-test-2019-11-18-11&quot;,
        &quot;_type&quot; : &quot;_doc&quot;,
        &quot;_id&quot; : &quot;49601506511312770511672440629712429607762179829222342658.0&quot;,
        &quot;_score&quot; : 0.99693555,
        &quot;_source&quot; : {
          &quot;board_id&quot; : 449380,
          &quot;playtime&quot; : 12,
          &quot;user_id&quot; : 635895,
          &quot;interest&quot; : &quot;test_fluentd_firehose&quot;,
          &quot;timestamp&quot; : &quot;2019-12-14T21:01:22Z&quot;
        }
      },
      {
        &quot;_index&quot; : &quot;data-test-2019-11-18-11&quot;,
        &quot;_type&quot; : &quot;_doc&quot;,
        &quot;_id&quot; : &quot;49601506511312770511672440629713638533581794458397048834.0&quot;,
        &quot;_score&quot; : 0.99693555,
        &quot;_source&quot; : {
          &quot;board_id&quot; : 380671,
          &quot;playtime&quot; : 8,
          &quot;user_id&quot; : 964548,
          &quot;interest&quot; : &quot;test_fluentd_firehose&quot;,
          &quot;timestamp&quot; : &quot;2019-10-16T08:25:32Z&quot;
        }
      },
      {
        &quot;_index&quot; : &quot;data-test-2019-11-18-11&quot;,
        &quot;_type&quot; : &quot;_doc&quot;,
        &quot;_id&quot; : &quot;49601506511312770511672440629714847459401409087571755010.0&quot;,
        &quot;_score&quot; : 0.99693555,
        &quot;_source&quot; : {
          &quot;board_id&quot; : 497368,
          &quot;playtime&quot; : 7,
          &quot;user_id&quot; : 222811,
          &quot;interest&quot; : &quot;test_fluentd_firehose&quot;,
          &quot;timestamp&quot; : &quot;2019-08-18T04:00:50Z&quot;
        }
      }
    ]
  }
}


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;결과 중 total의 value의 값이 10000인 것을 통해 정확히 10000개의 Documents가 입력되었음을 알 수 있다. &lt;/p&gt;

&lt;h1 id=&quot;테스트-결과&quot;&gt;테스트 결과&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;테스트 결과 Fluentd에서 Firehose로 데이터가 정상적으로 입력되며 Firehose에서 Elasticsearch, S3로 데이터가 정상적으로 입력됨을 확인할 수 있다.&lt;/p&gt;</content><author><name>Andro</name><email>seongwoo.dev@gmail.com</email></author><category term="Fluentd, AWS Kinesis firehose, Elasticsearch, AWS" /><summary type="html">이 문서는 Fluentd에서 AWS Kinesis firehose로 데이터 보내는 테스트의 과정과 결과를 기록하기 위해 작성하였다.</summary></entry><entry><title type="html">first post</title><link href="http://localhost:4000/blog/test-post/" rel="alternate" type="text/html" title="first post" /><published>2019-12-09T00:00:00+09:00</published><updated>2019-12-09T14:20:00+09:00</updated><id>http://localhost:4000/blog/test-post</id><content type="html" xml:base="http://localhost:4000/blog/test-post/">&lt;p&gt;&amp;lt;!DOCTYPE html PUBLIC “-//W3C//DTD XHTML 1.0 Strict//EN” “http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd”&amp;gt;
&lt;!-- Sun Dec 08 15:38:20 UTC 2019 --&gt;&lt;/p&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;
    &lt;link rel=&quot;stylesheet&quot; href=&quot;combined.css&quot; /&gt;
    &lt;script src=&quot;split/split.min.js&quot;&gt;&lt;/script&gt;
    &lt;link rel=&quot;stylesheet&quot; href=&quot;inline_styles.css&quot; /&gt;
    &lt;style type=&quot;text/css&quot;&gt;
        /* &lt;![CDATA[ */
            
        /* ]]&gt; */
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div class=&quot;full-height-container&quot;&gt;
&lt;div id=&quot;sidebar&quot; class=&quot;split&quot;&gt;
&lt;div class=&quot;navgroup&quot; id=&quot;search&quot;&gt;
&lt;form action=&quot;search.html&quot; class=&quot;aui&quot;&gt;
&lt;input type=&quot;text&quot; name=&quot;q&quot; id=&quot;tipue_search_input&quot; class=&quot;medium-field text&quot; /&gt;
&lt;input class=&quot;button submit&quot; type=&quot;submit&quot; value=&quot;Search&quot; /&gt;&lt;/form&gt;
&lt;/div&gt;
&lt;div class=&quot;navgroup&quot; id=&quot;navigation&quot;&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;Fluentd 기초 사용법&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;content&quot; class=&quot;split&quot;&gt;
&lt;div class=&quot;wiki-page&quot;&gt;
&lt;div class=&quot;wiki-title&quot;&gt;
&lt;h1 class=&quot;page-title-lvl-cover&quot; id=&quot;Bookmark1&quot;&gt;Fluentd 기초 사용법&lt;/h1&gt;
&lt;/div&gt;
&lt;div class=&quot;wiki-content&quot;&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;table-wrap&quot;&gt;&lt;table data-layout=&quot;default&quot; class=&quot;confluenceTable&quot; style=&quot;font-size:1.0em&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;confluenceTd&quot; style=&quot;padding:0.5em&quot;&gt;&lt;!--inline_style_1--&gt;&lt;div class=&quot;toc-macro rbtoc1575819500472&quot;&gt;
&lt;ul class=&quot;toc-indentation&quot;&gt;
&lt;li&gt;&lt;a href=&quot;#Bookmark2&quot; title=&quot;목적&quot;&gt;목적&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Bookmark3&quot; title=&quot;환경&quot;&gt;환경&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Bookmark4&quot; title=&quot;사용법&quot;&gt;사용법&lt;/a&gt;
&lt;ul class=&quot;toc-indentation&quot;&gt;
&lt;li&gt;&lt;a href=&quot;#Bookmark5&quot; title=&quot;실행, 종료&quot;&gt;실행, 종료&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Bookmark6&quot; title=&quot;로그 파일&quot;&gt;로그 파일&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Bookmark7&quot; title=&quot;설정파일 경로를 변경하는 방법&quot;&gt;설정파일 경로를 변경하는 방법&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Bookmark8&quot; title=&quot;참고자료&quot;&gt;참고자료&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;a name=&quot;Bookmark2&quot;&gt;&lt;/a&gt;&lt;h1 id=&quot;Bookmark2&quot;&gt;목적&lt;/h1&gt;&lt;p&gt;이 문서는 Fluentd(td-agent) 사용함에 있어 다음과 같은 사용법을 정리하기 위하여 작성 되었다.&lt;/p&gt;&lt;div class=&quot;table-wrap&quot;&gt;&lt;table data-layout=&quot;default&quot; class=&quot;confluenceTable&quot; style=&quot;font-size:1.0em&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;confluenceTd&quot; style=&quot;padding:0.5em&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;td-agent의 실행과 종료&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;td-agent 로그파일&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;td-agent 설정파일 경로를 변경하는 방법&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;a name=&quot;Bookmark3&quot;&gt;&lt;/a&gt;&lt;h1 id=&quot;Bookmark3&quot;&gt;환경&lt;/h1&gt;&lt;p&gt;다음과 같은 환경에서 Fluentd를 구동하였다.&lt;/p&gt;&lt;div class=&quot;table-wrap&quot;&gt;&lt;table data-layout=&quot;default&quot; class=&quot;confluenceTable&quot; style=&quot;font-size:1.0em&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;confluenceTd&quot; style=&quot;padding:0.5em&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;OS : macOS Mojave 10.14.5&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Fluentd : 1.0.2 (td-agent : 3.1.1.0)&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;a name=&quot;Bookmark4&quot;&gt;&lt;/a&gt;&lt;h1 id=&quot;Bookmark4&quot;&gt;사용법&lt;/h1&gt;&lt;a name=&quot;Bookmark5&quot;&gt;&lt;/a&gt;&lt;h2 id=&quot;Bookmark5&quot;&gt;실행, 종료&lt;/h2&gt;&lt;p&gt;td-agent의 실행은 다음과 같은 명령으로 한다.&lt;/p&gt;&lt;div class=&quot;table-wrap&quot;&gt;&lt;table data-layout=&quot;default&quot; class=&quot;confluenceTable&quot; style=&quot;font-size:1.0em&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;confluenceTd&quot; style=&quot;padding:0.5em&quot;&gt;&lt;div class=&quot;code panel pdl&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
&lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: java; gutter: false; theme: Confluence&quot; data-theme=&quot;Confluence&quot;&gt;$ sudo launchctl load /Library/LaunchDaemons/td-agent.plist&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;td-agent의 종료는 다음과 같은 명령으로 한다.&lt;/p&gt;&lt;div class=&quot;table-wrap&quot;&gt;&lt;table data-layout=&quot;default&quot; class=&quot;confluenceTable&quot; style=&quot;font-size:1.0em&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;confluenceTd&quot; style=&quot;padding:0.5em&quot;&gt;&lt;div class=&quot;code panel pdl&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
&lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: java; gutter: false; theme: Confluence&quot; data-theme=&quot;Confluence&quot;&gt;$ sudo launchctl unload /Library/LaunchDaemons/td-agent.plist&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;편의를 위하여 다음과 같이 디렉터리에 접근하여 실행, 종료 하기도 한다.&lt;/p&gt;&lt;div class=&quot;table-wrap&quot;&gt;&lt;table data-layout=&quot;default&quot; class=&quot;confluenceTable&quot; style=&quot;font-size:1.0em&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;confluenceTd&quot; style=&quot;padding:0.5em&quot;&gt;&lt;div class=&quot;code panel pdl&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
&lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: java; gutter: false; theme: Confluence&quot; data-theme=&quot;Confluence&quot;&gt;$ cd /Library/LaunchDaemons
$ sudo launchctl load td-agent.plist
$ sudo launchctl unload td-agent.plist&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;a name=&quot;Bookmark6&quot;&gt;&lt;/a&gt;&lt;h2 id=&quot;Bookmark6&quot;&gt;로그 파일&lt;/h2&gt;&lt;p&gt;td-agent의 로그는 다음과 같은 경로의 파일에 저장된다.&lt;/p&gt;&lt;div class=&quot;table-wrap&quot;&gt;&lt;table data-layout=&quot;default&quot; class=&quot;confluenceTable&quot; style=&quot;font-size:1.0em&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;confluenceTd&quot; style=&quot;padding:0.5em&quot;&gt;&lt;div class=&quot;code panel pdl&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
&lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: java; gutter: false; theme: Confluence&quot; data-theme=&quot;Confluence&quot;&gt;/var/log/td-agent/td-agent.log&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;다음과 같이 td-agent 로그 파일을 테일링하여 td-agent의 동작을 확인하기도 한다.&lt;/p&gt;&lt;div class=&quot;table-wrap&quot;&gt;&lt;table data-layout=&quot;default&quot; class=&quot;confluenceTable&quot; style=&quot;font-size:1.0em&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;confluenceTd&quot; style=&quot;padding:0.5em&quot;&gt;&lt;div class=&quot;code panel pdl&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
&lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: java; gutter: false; theme: Confluence&quot; data-theme=&quot;Confluence&quot;&gt;$ tail -50f td-agent.log
2019-09-18 14:47:33 +0900 [info]: #0 shutting down input plugin type=:tail plugin_id=&amp;quot;object:3fe4d84363e8&amp;quot;
2019-09-18 14:47:33 +0900 [info]: #0 shutting down output plugin type=:file plugin_id=&amp;quot;object:3fe4d859ffcc&amp;quot;
2019-09-18 14:47:33 +0900 [info]: Worker 0 finished with status 0
2019-09-18 15:18:32 +0900 [info]: parsing config file is succeeded path=&amp;quot;/Users/kevin/dev/fluentd/test/file_path/config/td-agent.conf&amp;quot;
2019-09-18 15:18:32 +0900 [info]: using configuration file: &amp;lt;ROOT&amp;gt;
  &amp;lt;source&amp;gt;
    @type tail
    tag &amp;quot;file_path&amp;quot;
    path &amp;quot;/Users/kevin/dev/fluentd/test/file_path/source/prefix*&amp;quot;
    pos_file &amp;quot;/Users/kevin/dev/fluentd/test/file_path/pos/pos_file.pos&amp;quot;
    refresh_interval 5s
    read_from_head true
    &amp;lt;parse&amp;gt;
      @type &amp;quot;none&amp;quot;
    &amp;lt;/parse&amp;gt;
  &amp;lt;/source&amp;gt;
  &amp;lt;match file_path*&amp;gt;
    @type file
    path &amp;quot;/Users/kevin/dev/fluentd/test/file_path/match/${tag}_output&amp;quot;
    add_path_suffix true
    path_suffix &amp;quot;.log&amp;quot;
    append true
    &amp;lt;buffer tag&amp;gt;
      flush_mode interval
      flush_interval 5s
      path &amp;quot;/Users/kevin/dev/fluentd/test/file_path/match/${tag}_output&amp;quot;
    &amp;lt;/buffer&amp;gt;
    &amp;lt;format&amp;gt;
      @type &amp;quot;out_file&amp;quot;
      output_tag false
      output_time true
    &amp;lt;/format&amp;gt;
  &amp;lt;/match&amp;gt;
&amp;lt;/ROOT&amp;gt;
2019-09-18 15:18:32 +0900 [info]: starting fluentd-1.0.2 pid=2152 ruby=&amp;quot;2.4.2&amp;quot;
2019-09-18 15:18:32 +0900 [info]: spawn command to main:  cmdline=[&amp;quot;/opt/td-agent/embedded/bin/ruby&amp;quot;, &amp;quot;-Eascii-8bit:ascii-8bit&amp;quot;, &amp;quot;/opt/td-agent/usr/sbin/td-agent&amp;quot;, &amp;quot;--log&amp;quot;, &amp;quot;/var/log/td-agent/td-agent.log&amp;quot;, &amp;quot;--use-v1-config&amp;quot;, &amp;quot;--under-supervisor&amp;quot;]
2019-09-18 15:18:32 +0900 [info]: gem 'fluent-plugin-elasticsearch' version '2.4.0'
2019-09-18 15:18:32 +0900 [info]: gem 'fluent-plugin-kafka' version '0.6.5'
2019-09-18 15:18:32 +0900 [info]: gem 'fluent-plugin-rewrite-tag-filter' version '2.0.1'
2019-09-18 15:18:32 +0900 [info]: gem 'fluent-plugin-s3' version '1.1.0'
2019-09-18 15:18:32 +0900 [info]: gem 'fluent-plugin-td' version '1.0.0'
2019-09-18 15:18:32 +0900 [info]: gem 'fluent-plugin-td-monitoring' version '0.2.3'
2019-09-18 15:18:32 +0900 [info]: gem 'fluent-plugin-webhdfs' version '1.2.2'
2019-09-18 15:18:32 +0900 [info]: gem 'fluentd' version '1.0.2'
2019-09-18 15:18:32 +0900 [info]: adding match pattern=&amp;quot;file_path*&amp;quot; type=&amp;quot;file&amp;quot;
2019-09-18 15:18:32 +0900 [info]: adding source type=&amp;quot;tail&amp;quot;
2019-09-18 15:18:32 +0900 [info]: #0 starting fluentd worker pid=2159 ppid=2152 worker=0
2019-09-18 15:18:32 +0900 [info]: #0 following tail of /Users/kevin/dev/fluentd/test/file_path/source/prefix_test.txt
2019-09-18 15:18:32 +0900 [info]: #0 following tail of /Users/kevin/dev/fluentd/test/file_path/source/prefix_test.log
2019-09-18 15:18:32 +0900 [info]: #0 fluentd worker is now running worker=0&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;a name=&quot;Bookmark7&quot;&gt;&lt;/a&gt;&lt;h1 id=&quot;Bookmark7&quot;&gt;설정파일 경로를 변경하는 방법&lt;/h1&gt;&lt;p&gt;td-agent 설정파일의 기본 경로는 다음과 같다.&lt;/p&gt;&lt;div class=&quot;table-wrap&quot;&gt;&lt;table data-layout=&quot;default&quot; class=&quot;confluenceTable&quot; style=&quot;font-size:1.0em&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;confluenceTd&quot; style=&quot;padding:0.5em&quot;&gt;&lt;p&gt;/etc/td-agent/td-agent.conf&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;설정파일의 경로를 변경하기 위해서는 다음 경로의 파일에 접근해야 한다.&lt;/p&gt;&lt;div class=&quot;table-wrap&quot;&gt;&lt;table data-layout=&quot;default&quot; class=&quot;confluenceTable&quot; style=&quot;font-size:1.0em&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;confluenceTd&quot; style=&quot;padding:0.5em&quot;&gt;&lt;p&gt;/opt/td-agent/usr/sbin/td-agent&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class=&quot;table-wrap&quot;&gt;&lt;table data-layout=&quot;default&quot; class=&quot;confluenceTable&quot; style=&quot;font-size:1.0em&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;confluenceTd&quot; style=&quot;padding:0.5em&quot;&gt;&lt;div class=&quot;code panel pdl&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
&lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: java; gutter: false; theme: Confluence&quot; data-theme=&quot;Confluence&quot;&gt;$&amp;nbsp;cat /opt/td-agent/usr/sbin/td-agent
#!/opt/td-agent/embedded/bin/ruby
ENV[&amp;quot;GEM_HOME&amp;quot;]=&amp;quot;/opt/td-agent/embedded/lib/ruby/gems/2.4.0/&amp;quot;
ENV[&amp;quot;GEM_PATH&amp;quot;]=&amp;quot;/opt/td-agent/embedded/lib/ruby/gems/2.4.0/&amp;quot;
ENV[&amp;quot;FLUENT_CONF&amp;quot;]=&amp;quot;/etc/td-agent/td-agent.conf&amp;quot;
ENV[&amp;quot;FLUENT_PLUGIN&amp;quot;]=&amp;quot;/etc/td-agent/plugin&amp;quot;
ENV[&amp;quot;FLUENT_SOCKET&amp;quot;]=&amp;quot;/var/run/td-agent/td-agent.sock&amp;quot;
load &amp;quot;/opt/td-agent/embedded/bin/fluentd&amp;quot;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;위의 파일 내용중&amp;nbsp;ENV[&amp;quot;FLUENT_CONF&amp;quot;]=&amp;quot;/etc/td-agent/td-agent.conf&amp;quot;을 원하는 설정파일의 경로를 변경해주면 된다.&lt;/p&gt;&lt;p&gt;다음은 변경한 예시이다.&lt;/p&gt;&lt;div class=&quot;table-wrap&quot;&gt;&lt;table data-layout=&quot;default&quot; class=&quot;confluenceTable&quot; style=&quot;font-size:1.0em&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;confluenceTd&quot; style=&quot;padding:0.5em&quot;&gt;&lt;div class=&quot;code panel pdl&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
&lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: java; gutter: false; theme: Confluence&quot; data-theme=&quot;Confluence&quot;&gt;$ vim /opt/td-agent/usr/sbin/td-agent
#!/opt/td-agent/embedded/bin/ruby
ENV[&amp;quot;GEM_HOME&amp;quot;]=&amp;quot;/opt/td-agent/embedded/lib/ruby/gems/2.4.0/&amp;quot;
ENV[&amp;quot;GEM_PATH&amp;quot;]=&amp;quot;/opt/td-agent/embedded/lib/ruby/gems/2.4.0/&amp;quot;
ENV[&amp;quot;FLUENT_CONF&amp;quot;]=&amp;quot;/Users/kevin/dev/fluentd/test/file_path/config/td-agent.conf&amp;quot;
ENV[&amp;quot;FLUENT_PLUGIN&amp;quot;]=&amp;quot;/etc/td-agent/plugin&amp;quot;
ENV[&amp;quot;FLUENT_SOCKET&amp;quot;]=&amp;quot;/var/run/td-agent/td-agent.sock&amp;quot;
load &amp;quot;/opt/td-agent/embedded/bin/fluentd&amp;quot;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;a name=&quot;Bookmark8&quot;&gt;&lt;/a&gt;&lt;h1 id=&quot;Bookmark8&quot;&gt;&lt;br /&gt;참고자료&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://docs.fluentd.org/installation/install-by-dmg&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://docs.fluentd.org/installation/install-by-dmg&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://docs.fluentd.org/installation/post-installation-guide&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://docs.fluentd.org/installation/post-installation-guide&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;script&gt;
Split(['#sidebar', '#content'], {
    sizes: [15, 85],
    minSize: 100
});
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</content><author><name>Andro</name><email>seongwoo.dev@gmail.com</email></author><category term="Blog" /><summary type="html">first post excerpt</summary></entry></feed>